service: auction-service

plugins:
  - serverless-bundle
  - serverless-s3-remover

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  deploymentMethod: direct
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}
    - ${file(iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}
  httpApi:
    authorizers:
      auth:
        type: request
        functionArn: ${self:custom.authorizerLambda}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}
    AuctionsBucket: ${file(resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(resources/AuctionsBucket.yml):AuctionsBucketPolicy}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - httpApi:
          method: POST
          path: /auction
          authorizer:
            name: auth
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - httpApi:
          method: GET
          path: /auctions
          authorizer:
            name: auth
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - httpApi:
          method: GET
          path: /auction/{id}
          authorizer:
            name: auth
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - httpApi:
          method: PATCH
          path: /auction/{id}/bid
          authorizer:
            name: auth
  processAuctions:
    handler: src/handlers/processAuctions.handler
    events:
      - schedule: rate(15 minutes)
  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events:
      - httpApi:
          method: PATCH
          path: /auction/{id}/picture
          authorizer:
            name: auth

custom:
  authorizerLambda: arn:aws:lambda:${aws:region}:${aws:accountId}:function:auth-service-${sls:stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  MailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: auctions-bucket-ap4bwc-${self:provider.stage}
  remover:
     buckets:
       - ${self:custom.AuctionsBucket.name}
